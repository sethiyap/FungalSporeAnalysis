% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genelist_specific_profileplot.R
\name{genelist_specific_profileplot}
\alias{genelist_specific_profileplot}
\title{profile plot specific to a genelist}
\usage{
genelist_specific_profileplot(feature_txDb, genelist = NULL, bw_files,
  tss = TRUE, max_key = 6, min_key = 0, output = TRUE,
  output_name = "Sample", palette = "cream_brown", ymax = 6,
  ymin = 1)
}
\arguments{
\item{feature_txDb}{A TxDb object of gene feature file, generated by
\code{GenomicFeatures::makeTxDbFromGFF()}}

\item{genelist}{A tibble with two columns \code{1. gene_id and 2.Expression
value} without header, to subset genes from the feature file.
\code{default:NULL}}

\item{bw_files}{A character vector containing either name of the bw file
object or names of bw file objects to plot.}

\item{tss}{Logical, if TRUE plot 1kb up/downstream of start co-ordinate; if
FALSE plot 1kb up/downstream of gene-body \code{default: TRUE}}

\item{max_key}{Numeric, maximum limit of the color key.\code{default:6}}

\item{min_key}{Numeric, mimimum limit of the color key.\code{default:0}}

\item{output}{Logical, to return a output of profile plot or not.
\code{default: TRUE, with output_name,if FALSE; plot will be returned} **
Highly recommended to plot in outfile when .bw files are more than 2.}

\item{output_name}{A character vector containing name of the output
plot.\code{default:Sample}}

\item{palette}{A character vector to choose sequential palette; \itemize{
\item white_green \item white_red \item white_blue \item cream_pink \item
cream_brown \item cream_green } \code{default: cream_brown}}

\item{ymax}{Numeric, y-axis max limit for lineplot \code{default:6}}

\item{ymin}{Numeric, y-axis minimum limit for lineplot \code{default:1}}
}
\value{
Parallel plots of profiles(log2) for given gene lists, ordered by
  given expression value (high to low).
}
\description{
Profile plot for list of genes to be subsetted from genome
  feature file.
}
\examples{
\dontrun{

feature_txDb <- AnnotationDbi::loadDb("R/an_feature_file_s10_m04_r07.sqlite")
gene_list <- readr::read_delim("data/An_Spore_Pol2.txt", delim="\\t", col_names = FALSE)
bw_files <- c("pol2_veA_wt_spore","TBP_veA_wt_spore", "TFIIB_veA_wt_spore")
genelist_specific_profileplot(feature_txDb=feature_txDb,bw_files = bw_files, genelist=gene_list, output_name="An_Pol2_TBP_TFIIB", ymin=3)

}
}
